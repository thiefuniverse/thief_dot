# language: None, Cpp, Java, JavaScript, ObjC, Proto, TableGen, TextProto
Language:       Cpp
# BasedOnStyle: LLVM
# 访问说明符(public、private等) offset
AccessModifierOffset:   -4
# 连续声明时，对齐所有声明的变量名
# wAlignConsecutiveDeclarations:        true
# 左对齐逃脱换行(使用反斜杠换行)的反斜杠
AlignEscapedNewlinesLeft:       true
# 水平对齐二元和三元表达式的操作数
AlignOperands:  true
# 对齐连续的尾随的注释
AlignTrailingComments:  true
# 允许函数声明的所有参数在放在下一行
AllowAllParametersOfDeclarationOnNextLine:      true
# 允许短的块放在同一行
AllowShortBlocksOnASingleLine:  false
# 允许短的case标签放在同一行
AllowShortCaseLabelsOnASingleLine:      false
# 允许短的函数放在同一行: None, InlineOnly(定义在类中), Empty(空函数), Inline(定义在类中，空函数), All
AllowShortFunctionsOnASingleLine:       Empty
# 允许短的if
AllowShortIfStatementsOnASingleLine:    true
# 允许短的循环保持在同一行
AllowShortLoopsOnASingleLine:   false
# 总是在多行string字面量前换行
AlwaysBreakBeforeMultilineStrings:      false
# 总是在template声明后换行
AlwaysBreakTemplateDeclarations:        true
# false表示函数实参要么都在同一行，要么都各自一行
BinPackArguments:       false
# false表示所有形参要么都在同一行，要么都各自一行
BinPackParameters:      false
# 在二元运算符前换行: None(在操作符后换行), NonAssignment(在非赋值的操作符前换行), All(在操作符前换行)
BreakBeforeBinaryOperators:     NonAssignment
# 在三元运算符前换行
BreakBeforeTernaryOperators:    true
# 在构造函数的初始化列表的逗号前换行
BreakConstructorInitializersBeforeComma:        false
# 每行字符的限制，0表示没有限制
ColumnLimit:    200
# 描述具有特殊意义的注释的正则表达式，它不应该被分割为多行或以其它方式改变
CommentPragmas: '^ IWYU pragma:'
# 构造函数的初始化列表要么都在同一行，要么都各自一行
ConstructorInitializerAllOnOneLineOrOnePerLine: false
# 构造函数的初始化列表的缩进宽度
ConstructorInitializerIndentWidth:      4
# 延续的行的缩进宽度
ContinuationIndentWidth:        4
# 去除C++11的列表初始化的大括号{后和}前的空格
Cpp11BracedListStyle:   true
# 继承最常用的指针和引用的对齐方式
DerivePointerAlignment: false
# 关闭格式化
DisableFormat:  false
# 自动检测函数的调用和定义是否被格式为每行一个参数(Experimental)
ExperimentalAutoDetectBinPacking:       false
# 需要被解读为foreach循环而不是函数调用的宏
ForEachMacros:  [ foreach, Q_FOREACH, BOOST_FOREACH ]
# 缩进case标签
IndentCaseLabels:       false
# 缩进宽度
IndentWidth:    4
# 函数返回类型换行时，缩进函数声明或函数定义的函数名
IndentWrappedFunctionNames:     false
# 保留在块开始处的空行
KeepEmptyLinesAtTheStartOfBlocks:       true
# 连续空行的最大数量
MaxEmptyLinesToKeep:    1
# 命名空间的缩进: None, Inner(缩进嵌套的命名空间中的内容), All
NamespaceIndentation:   Inner
# 使用ObjC块时缩进宽度
ObjCBlockIndentWidth:   4
# 在ObjC的@property后添加一个空格
ObjCSpaceAfterProperty: false
# 在ObjC的protocol列表前添加一个空格
ObjCSpaceBeforeProtocolList:    true
# 在call(后对函数调用换行的penalty
PenaltyBreakBeforeFirstCallParameter:   19
# 在一个注释中引入换行的penalty
PenaltyBreakComment:    300
# 第一次在<<前换行的penalty
PenaltyBreakFirstLessLess:      120
# 在一个字符串字面量中引入换行的penalty
PenaltyBreakString:     1000
# 对于每个在行字符数限制之外的字符的penalty
PenaltyExcessCharacter: 1000000
# 将函数的返回类型放到它自己的行的penalty
PenaltyReturnTypeOnItsOwnLine:  60
# 指针和引用的对齐: Left, Right, Middle
PointerAlignment:       Right
BreakBeforeBraces: Attach
AlignAfterOpenBracket: true
# 允许重新排版注释
# ReflowComments:       true
# 在C风格类型转换后添加空格
SpaceAfterCStyleCast:   false
# 在赋值运算符之前添加空格
SpaceBeforeAssignmentOperators: true
# 开圆括号之前添加一个空格: Never, ControlStatements, Always
SpaceBeforeParens:      ControlStatements
# 在空的圆括号中添加空格
SpaceInEmptyParentheses:        false
# 在尾随的评论前添加的空格数(只适用于//)
SpacesBeforeTrailingComments:   2
# 在尖括号的<后和>前添加空格
SpacesInAngles: true
# 在容器(ObjC和JavaScript的数组和字典等)字面量中添加空格
SpacesInContainerLiterals:      true
# 在C风格类型转换的括号中添加空格
SpacesInCStyleCastParentheses:  true
# 在圆括号的(后和)前添加空格
SpacesInParentheses:    false
# 在方括号的[后和]前添加空格，lamda表达式和未指明大小的数组的声明不受影响
SpacesInSquareBrackets: false
# 标准: Cpp03, Cpp11, Auto
Standard:       Cpp11
# tab宽度
TabWidth:       4
# 使用tab字符: Never, ForIndentation, ForContinuationAndIndentation, Always
UseTab: Never
